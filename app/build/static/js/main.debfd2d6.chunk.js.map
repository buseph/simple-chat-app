{"version":3,"sources":["components/ui/Theme.js","components/MainContainer.jsx","components/ChatBubble.jsx","components/NoMessages.jsx","components/MessageContainer.jsx","App.js","index.js"],"names":["blue","yellow","createTheme","palette","common","white","red","primary","main","secondary","useStyles","makeStyles","theme","chatContainer","width","height","backgroundColor","boxShadow","shadows","padding","breakpoints","down","contentContainer","greeting","fontWeight","marginBottom","color","fontSize","startButton","marginTop","avatarContainer","userAvatar","MainContainer","inputName","setInputName","validate","setValidate","invalidName","setInValidName","socket","classes","useTheme","a","emit","user","username","Grid","container","direction","justifyContent","alignContent","style","item","className","Avatar","slice","toLocaleUpperCase","Typography","variant","align","TextField","error","helperText","autoComplete","autoFocus","inputProps","min","textAlign","value","onChange","e","userInput","target","toLocaleLowerCase","includes","fullWidth","to","textDecoration","pointerEvents","Button","disabled","onClick","chat","maxWidth","borderRadius","overflowWrap","wordBreak","messageContent","lineHeight","you","black","marginRight","other","server","grey","youChatInfo","otherChatInfo","marginLeft","authorName","newUser","light","ChatBubble","author","message","Box","display","noWrap","noMessagesText","noMessageIcon","NoMessages","ForumRounded","useStyle","chatContent","messageInputContainer","messageInput","borderColor","sendButton","mainTheme","transition","messages","autoScroll","overflow","inputContainer","userCount","MessageInput","withStyles","root","MessageContainer","useState","isValidate","setIsValidate","setMessageInput","setMessages","setUserCount","handleSendMessage","preventDefault","messageData","id","uuidv4","prevState","useEffect","unmounted","on","data","userNumber","newUserName","wrap","GroupRounded","length","map","action","onSubmit","placeholder","buttonContainer","disableElevation","SendRounded","io","connect","App","ThemeProvider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"yJAEMA,EAAO,UAEPC,EAAS,UAGAC,cAAY,CACzBC,QAAS,CACPC,OAAQ,CACNJ,KAAMA,EACNK,MARQ,UASRJ,OAAQA,EACRK,IARM,WAURC,QAAS,CACPC,KAAMR,GAERS,UAAW,CACTD,KAAMP,M,+GCdNS,EAAYC,aAAW,SAACC,GAAD,cAAY,CACvCC,eAAa,GACXC,MAAO,OACPC,OAAQ,OACRC,gBAAiBJ,EAAMT,QAAQC,OAAOC,MACtCY,UAAWL,EAAMM,QAAQ,GACzBC,QAAS,SALE,cAMVP,EAAMQ,YAAYC,KAAK,MAAQ,CAC9BP,MAAO,OACPC,OAAQ,SARC,cAUVH,EAAMQ,YAAYC,KAAK,OAAS,IAVtB,GAYbC,iBAAiB,eACdV,EAAMQ,YAAYC,KAAK,OAAS,CAC/BP,MAAO,UAGXS,UAAQ,GACNC,WAAY,OACZC,aAAc,OACdC,MAAOd,EAAMT,QAAQM,UAAUD,MAHzB,cAILI,EAAMQ,YAAYC,KAAK,OAAS,CAC/BM,SAAU,WALN,cAOLf,EAAMQ,YAAYC,KAAK,OAAS,CAC/BM,SAAU,OACVF,aAAc,SATV,GAYRG,YAAa,CACXC,UAAW,OACXb,gBAAiBJ,EAAMT,QAAQC,OAAOE,IACtCoB,MAAO,OACPF,WAAY,OACZG,SAAU,SACV,UAAW,CACTX,gBAAiBJ,EAAMT,QAAQC,OAAOE,MAG1CwB,gBAAiB,CACfhB,MAAO,QAETiB,WAAY,CACVjB,MAAO,MACPC,OAAQ,MACRY,SAAU,OACVV,UAAWL,EAAMM,QAAQ,GACzBO,aAAc,YAIH,SAASO,EAAT,GAQX,IAPFC,EAOC,EAPDA,UACAC,EAMC,EANDA,aACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,eACAC,EACC,EADDA,OAEMC,EAAU9B,IACVE,EAAQ6B,cAFb,4CAwBD,sBAAAC,EAAA,sEACQH,EAAOI,KAAK,eAAgB,CAAEC,KAAM,EAAGC,SAAUZ,IADzD,4CAxBC,sBA4BD,OACE,cAACa,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,eAAe,SACfC,aAAa,SACbC,MAAO,CAAErC,MAAO,QAASC,OAAQ,SALnC,SAOE,cAAC+B,EAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTC,UAAU,SACVE,aAAa,SACbD,eAAe,SACfI,UAAWb,EAAQ3B,cANrB,SAQE,eAACiC,EAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTC,UAAU,SACVK,UAAWb,EAAQlB,iBAJrB,UAME,cAACwB,EAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTE,eAAe,SACfI,UAAWb,EAAQV,gBAJrB,SAME,cAACwB,EAAA,EAAD,CACEH,MAAO,CACLnC,gBAAiBmB,EAAW,GAAKvB,EAAMT,QAAQI,QAAQC,MAEzD6C,UAAWb,EAAQT,WAJrB,SAMGE,EAAUsB,MAAM,EAAG,GAAGC,wBAG3B,cAACV,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACK,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,SACNjC,MAAM,UACN2B,UAAWb,EAAQjB,SAJrB,SAMGY,EACG,kBACA,WAAaF,EAAUsB,MAAM,EAAG,OAGxC,cAACT,EAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTE,eAAe,SACfE,MAAO,CAAErC,MAAO,QAJlB,SAME,cAAC8C,EAAA,EAAD,CACEC,MAAOxB,EACPyB,WAAYzB,EAAc,gCAAkC,GAC5D0B,aAAa,MACbL,QAAQ,WACRhC,MAAM,YACNsC,WAAS,EACTC,WAAY,CAAEC,IAAK,EAAGf,MAAO,CAAEgB,UAAW,WAC1ChB,MAAO,CAAErC,MAAO,KAChBsD,MAAOnC,EACPoC,SAzFZ,SAAqBC,GACnB,IAAMC,EAAYD,EAAEE,OAAOJ,MAC3BlC,EAAaqC,GAEK,KAAdA,EAEkC,WAAlCA,EAAUE,qBACVF,EAAUE,oBAAoBC,SAAS,WAEvCpC,GAAe,GACfF,GAAY,KAEZE,GAAe,GACfF,GAAY,IAGdA,GAAY,IA0EJuC,WAAS,MAGb,cAAC7B,EAAA,EAAD,UACE,cAAC,IAAD,CACE8B,GAAG,WACHzB,MAAO,CACL0B,eAAgB,OAChBC,cAAe3C,EAAW,OAAS,QAJvC,SAOE,cAAC4C,EAAA,EAAD,CACErB,QAAQ,YACRiB,WAAS,EACTtB,UAAWb,EAAQZ,YACnBoD,SAAU7C,EACV8C,QA9Gb,2CAyGW,wC,8CCvKRvE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsE,KAAM,CACJpE,MAAO,OACPC,OAAQ,OACRoE,SAAU,QACVzD,MAAO,OACPF,WAAY,IACZG,SAAU,OACVyD,aAAc,OACdjE,QAAS,YACTkE,aAAc,aACdC,UAAW,cAEbC,eAAgB,CACdC,WAAY,OAEdC,IAAK,CACHzE,gBAAiBJ,EAAMT,QAAQM,UAAUD,KACzCkB,MAAOd,EAAMT,QAAQC,OAAOsF,MAC5BC,YAAa,OAEfC,MAAO,CACL5E,gBAAiBJ,EAAMT,QAAQI,QAAQC,MAEzCqF,OAAQ,CACN7E,gBAAiBJ,EAAMT,QAAQC,OAAOC,MACtCqB,MAAOd,EAAMT,QAAQ2F,KAAK,MAE5BC,YAAa,CACXJ,YAAa,OAEfK,cAAe,CACbC,WAAY,OAEdC,WAAY,CACVxE,MAAOd,EAAMT,QAAQ2F,KAAK,MAE5BK,QAAS,CACPzE,MAAOd,EAAMT,QAAQI,QAAQ6F,WAIlB,SAASC,EAAT,GAA6D,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAAS1D,EAAqB,EAArBA,SAAUsD,EAAW,EAAXA,QACxD3D,EAAU9B,IAEhB,OACE,eAACoC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAA1B,UACE,cAACF,EAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTC,UAAU,MACVC,eAAgBJ,IAAayD,EAAS,WAAa,aAJrD,SAMc,WAAXA,EACC,cAACxD,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACoD,EAAA,EAAD,CAAKnD,UAAS,UAAKb,EAAQ0C,KAAb,YAAqB1C,EAAQqD,QAA3C,SACE,eAACpC,EAAA,EAAD,CACEE,MAAM,OACND,QAAQ,YACRL,UAAWb,EAAQ+C,eACnBkB,QAAQ,SAJV,UAME,oBAAGpD,UAAWb,EAAQ2D,QAAtB,UAAgCA,EAAhC,OACCI,SAKP,cAACzD,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACoD,EAAA,EAAD,CACEnD,UACER,IAAayD,EAAb,UACO9D,EAAQ0C,KADf,YACuB1C,EAAQiD,KAD/B,UAEOjD,EAAQ0C,KAFf,YAEuB1C,EAAQoD,OAJnC,SAOE,cAACnC,EAAA,EAAD,CACEE,MAAM,OACND,QAAQ,YACRL,UAAWb,EAAQ+C,eACnBkB,QAAQ,SAJV,SAMGF,UAMX,cAACzD,EAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTC,UAAU,MACVC,eAAgBJ,IAAayD,EAAS,WAAa,aAJrD,SAME,cAAC7C,EAAA,EAAD,CACEC,QAAQ,UACRgD,QAAM,EACNrD,UACER,IAAayD,EAAb,UACO9D,EAAQ0D,WADf,YAC6B1D,EAAQuD,aADrC,UAEOvD,EAAQ0D,WAFf,YAE6B1D,EAAQwD,eANzC,SASGM,S,sBCtGL5F,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+F,eAAgB,CACdjF,MAAOd,EAAMT,QAAQ2F,KAAK,MAE5Bc,cAAe,CACblF,MAAOd,EAAMT,QAAQ2F,KAAK,KAC1BnE,SAAU,WAyBCkF,MArBf,WACE,IAAMrE,EAAU9B,IAEhB,OACE,eAACoC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASE,aAAa,SAAhD,UACE,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,eAAe,SAA/C,SACE,cAAC6D,EAAA,EAAD,CAAczD,UAAWb,EAAQoE,kBAEnC,cAAC9D,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACK,EAAA,EAAD,CACEE,MAAM,SACND,QAAQ,QACRL,UAAWb,EAAQmE,eAHrB,+B,iBCXFI,EAAWpG,aAAW,SAACC,GAAD,MAAY,CACtCC,cAAc,aACZC,MAAO,OACPE,gBAAiBJ,EAAMT,QAAQC,OAAOC,MACtCY,UAAWL,EAAMM,QAAQ,GACzBC,QAAS,WACRP,EAAMQ,YAAYC,KAAK,MAAQ,CAC9BP,MAAO,OACPC,OAAQ,SAGZiG,YAAa,CACXlG,MAAO,OACPC,OAAQ,SAEVkG,sBAAuB,CACrBnG,MAAO,QAEToG,aAAc,CACZlG,gBAAiB,OACjBmE,SAAU,OACV,UAAW,CACTgC,YAAa,QAGjBC,WAAY,CACVpG,gBAAiBqG,EAAUlH,QAAQM,UAAUD,KAC7C8G,WAAY,YACZrB,WAAY,OACZlF,OAAQ,OACR,UAAW,CACTC,gBAAiBqG,EAAUlH,QAAQM,UAAU2F,QAGjDmB,SAAU,CACRzG,MAAO,OACPC,OAAQ,MACRqE,aAAc,MACd3D,aAAc,MACdT,gBAAiB,OACjBG,QAAS,cAEXqG,WAAY,CACV1G,MAAO,OACPC,OAAQ,OACR0G,SAAU,SACVxB,WAAY,SAEdyB,eAAgB,CACd5G,MAAO,QAET6G,UAAW,CACTnG,WAAY,IACZyE,WAAY,QACZpE,UAAW,QACXH,MAAOd,EAAMT,QAAQ2F,KAAK,UAIxB8B,EAAeC,YAAW,CAC9BC,KAAM,CACJ,2BAA4B,CAC1B,aAAc,CACZX,YAAaE,EAAUlH,QAAQM,UAAU2F,OAE3C,mBAAoB,CAClBe,YAAaE,EAAUlH,QAAQM,UAAUD,MAE3C,yBAA0B,CACxB2G,YAAaE,EAAUlH,QAAQM,UAAUD,SAV5BqH,CAclBjE,KAEY,SAASmE,EAAT,GAAkD,IAAtB9F,EAAqB,EAArBA,UAAWM,EAAU,EAAVA,OAC9CC,EAAUuE,IAEhB,EAAoCiB,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOd,EAAP,KAAqBiB,EAArB,KACA,EAAgCH,mBAAS,IAAzC,mBAAOT,EAAP,KAAiBa,EAAjB,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOL,EAAP,KAAkBU,EAAlB,KAaA,IAAMC,EAAiB,uCAAG,WAAOhE,GAAP,eAAA5B,EAAA,yDACxB4B,EAAEiE,iBAEmB,KAAjBrB,EAHoB,uBAIhBsB,EAAc,CAClBC,GAAIC,cACJpC,OAAQrE,EACRsE,QAASW,GAPW,SAUhB3E,EAAOI,KAAK,eAAgB6F,GAVZ,OAWtBJ,GAAY,SAACO,GAAD,4BAAmBA,GAAnB,CAA8BH,OAC1CL,EAAgB,IAChBD,GAAc,GAbQ,2CAAH,sDA2CvB,OA1BAU,qBAAU,WACR,IAAIC,GAAY,EAoBhB,OAlBAtG,EAAOuG,GAAG,mBAAmB,SAACC,GACvBF,GACHT,GAAY,SAACO,GAAD,4BAAmBA,GAAnB,CAA8BI,UAI9CxG,EAAOuG,GAAG,gBAAgB,SAACE,GACpBH,GACHR,EAAaW,MAIjBzG,EAAOuG,GAAG,YAAY,SAACG,GAChBJ,GACHT,GAAY,SAACO,GAAD,4BAAmBA,GAAnB,CAA8BM,UAIvC,WACLJ,GAAY,KAEb,CAACtG,IAGF,mCACiB,KAAdN,EACC,cAAC,IAAD,CAAU2C,GAAG,MAEb,cAAC9B,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,eAAe,SACfC,aAAa,SACbC,MAAO,CAAErC,MAAO,OAAQC,OAAQ,SALlC,SAOE,cAAC+B,EAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTC,UAAU,SACVE,aAAa,SACbG,UAAWb,EAAQ3B,cALrB,SAOE,eAACiC,EAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTC,UAAU,SACVK,UAAWb,EAAQwE,YACnBkC,KAAK,SALP,UAOE,eAACpG,EAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTC,UAAU,MACVC,eAAe,SACfC,aAAa,SALf,UAOE,cAACiG,EAAA,EAAD,CAAczH,MAAM,cACpB,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,QAAQL,UAAWb,EAAQmF,UAA/C,SACGA,OAIL,cAAC7E,EAAA,EAAD,CACEM,MAAI,EACJC,UAAWb,EAAQ+E,SACnBxE,WAAS,EACTC,UAAU,MACVE,aAAa,SALf,SAOuB,IAApBqE,EAAS6B,OACR,cAAC,EAAD,IAEA,cAAC,IAAD,CAAgB/F,UAAWb,EAAQgF,WAAnC,SAEGD,EAAS8B,KAAI,SAACN,GACb,OACE,cAAC1C,EAAD,CAEEC,OAAQyC,EAAKzC,OACbC,QAASwC,EAAKxC,QACd1D,SAAUZ,EACVkE,QAAS4C,EAAK5C,SAJT4C,EAAKN,WAWtB,sBACEA,GAAG,OACHa,OAAO,GACPvF,aAAa,MACbwF,SAAUjB,EAJZ,SAME,eAACxF,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,eAAe,WACfE,MAAO,CAAErC,MAAO,OAAQC,OAAQ,QAChCmI,KAAK,SALP,UAOE,cAACtB,EAAD,CACElE,QAAQ,WACRL,UAAWb,EAAQ0E,aACnBxF,MAAM,YACN8H,YAAY,qBACZpF,MAAO8C,EACP7C,SA1IlB,SAA8BC,GAC5B,IAAMF,EAAQE,EAAEE,OAAOJ,MACvB+D,EAAgB/D,GAGd8D,EADY,KAAV9D,IAuIYJ,WAAS,EACTW,WAAS,IAEX,cAAC7B,EAAA,EAAD,CAAMM,MAAI,EAACC,UAAWb,EAAQiH,gBAA9B,SACE,cAAC1E,EAAA,EAAD,CACErB,QAAQ,YACRL,UAAWb,EAAQ4E,WACnBsC,kBAAgB,EAChB1E,SAAUiD,EACVhD,QAASqD,EALX,SAOE,cAACqB,EAAA,EAAD,CAAahI,SAAS,4B,sBC5OtCY,EAASqH,IAAGC,QAAQ,8CA4CXC,MA1Cf,WACE,MAAkC9B,mBAAS,IAA3C,mBAAO/F,EAAP,KAAkBC,EAAlB,KACA,EAAgC8F,oBAAS,GAAzC,mBAAO7F,EAAP,KAAiBC,EAAjB,KACA,EAAsC4F,oBAAS,GAA/C,mBAAO3F,EAAP,KAAoBC,EAApB,KAEA,OACE,cAACyH,EAAA,EAAD,CAAenJ,MAAOA,EAAtB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEoJ,OAAK,EACLC,KAAK,IACLC,UAAW,kBACT,cAAClI,EAAD,CACEC,UAAWA,EACXC,aAAcA,EACdC,SAAUA,EACVC,YAAaA,EACbC,YAAaA,EACbC,eAAgBA,EAChBC,OAAQA,OAId,cAAC,IAAD,CACEyH,OAAK,EACLC,KAAK,WACLC,UAAW,kBACT,cAACnC,EAAD,CACExF,OAAQA,EACRN,UAAWA,EACX2H,GAAIA,IACJ/G,SAAUZ,eCvC1BkI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.debfd2d6.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core/styles\";\n\nconst blue = \"#3DB2FF\";\nconst white = \"#FFEDDA\";\nconst yellow = \"#FFB830\";\nconst red = \"#FF2442\";\n\nexport default createTheme({\n  palette: {\n    common: {\n      blue: blue,\n      white: white,\n      yellow: yellow,\n      red: red,\n    },\n    primary: {\n      main: blue,\n    },\n    secondary: {\n      main: yellow,\n    },\n  },\n});\n","import React from \"react\";\nimport { Grid, Typography, Button, TextField, Avatar } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  chatContainer: {\n    width: \"35em\",\n    height: \"35em\",\n    backgroundColor: theme.palette.common.white,\n    boxShadow: theme.shadows[2],\n    padding: \"0 8em\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      height: \"100%\",\n    },\n    [theme.breakpoints.down(\"415\")]: {},\n  },\n  contentContainer: {\n    [theme.breakpoints.down(\"555\")]: {\n      width: \"300px\",\n    },\n  },\n  greeting: {\n    fontWeight: \"bold\",\n    marginBottom: \"15px\",\n    color: theme.palette.secondary.main,\n    [theme.breakpoints.down(\"510\")]: {\n      fontSize: \"1.5rem\",\n    },\n    [theme.breakpoints.down(\"375\")]: {\n      fontSize: \"1rem\",\n      marginBottom: \"10px\",\n    },\n  },\n  startButton: {\n    marginTop: \"15px\",\n    backgroundColor: theme.palette.common.red,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1.1rem\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.common.red,\n    },\n  },\n  avatarContainer: {\n    width: \"100%\",\n  },\n  userAvatar: {\n    width: \"2em\",\n    height: \"2em\",\n    fontSize: \"5rem\",\n    boxShadow: theme.shadows[3],\n    marginBottom: \"20px\",\n  },\n}));\n\nexport default function MainContainer({\n  inputName,\n  setInputName,\n  validate,\n  setValidate,\n  invalidName,\n  setInValidName,\n  socket,\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  function handleInput(e) {\n    const userInput = e.target.value;\n    setInputName(userInput);\n\n    if (userInput !== \"\") {\n      if (\n        userInput.toLocaleLowerCase() === \"server\" ||\n        userInput.toLocaleLowerCase().includes(\"server\")\n      ) {\n        setInValidName(true);\n        setValidate(true);\n      } else {\n        setInValidName(false);\n        setValidate(false);\n      }\n    } else {\n      setValidate(true);\n    }\n  }\n\n  async function handleButton() {\n    await socket.emit(\"user_counter\", { user: 1, username: inputName });\n  }\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignContent=\"center\"\n      style={{ width: \"100vw\", height: \"100vh\" }}\n    >\n      <Grid\n        item\n        container\n        direction=\"column\"\n        alignContent=\"center\"\n        justifyContent=\"center\"\n        className={classes.chatContainer}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          className={classes.contentContainer}\n        >\n          <Grid\n            item\n            container\n            justifyContent=\"center\"\n            className={classes.avatarContainer}\n          >\n            <Avatar\n              style={{\n                backgroundColor: validate ? \"\" : theme.palette.primary.main,\n              }}\n              className={classes.userAvatar}\n            >\n              {inputName.slice(0, 1).toLocaleUpperCase()}\n            </Avatar>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h4\"\n              align=\"center\"\n              color=\"initial\"\n              className={classes.greeting}\n            >\n              {validate\n                ? \"Enter your name\"\n                : \"Welcome \" + inputName.slice(0, 7)}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            container\n            justifyContent=\"center\"\n            style={{ width: \"100%\" }}\n          >\n            <TextField\n              error={invalidName}\n              helperText={invalidName ? \"Please choose different name.\" : \"\"}\n              autoComplete=\"off\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              autoFocus\n              inputProps={{ min: 0, style: { textAlign: \"center\" } }}\n              style={{ width: 300 }}\n              value={inputName}\n              onChange={handleInput}\n              fullWidth\n            />\n          </Grid>\n          <Grid>\n            <Link\n              to=\"/message\"\n              style={{\n                textDecoration: \"none\",\n                pointerEvents: validate ? \"none\" : \"auto\",\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                fullWidth\n                className={classes.startButton}\n                disabled={validate}\n                onClick={handleButton}\n              >\n                Start Chatting!\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Grid, makeStyles, Typography, Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  chat: {\n    width: \"auto\",\n    height: \"auto\",\n    maxWidth: \"263px\",\n    color: \"#fff\",\n    fontWeight: 500,\n    fontSize: \"1rem\",\n    borderRadius: \"50px\",\n    padding: \"10px 15px\",\n    overflowWrap: \"break-word\",\n    wordBreak: \"break-word\",\n  },\n  messageContent: {\n    lineHeight: \"1px\",\n  },\n  you: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.common.black,\n    marginRight: \"1em\",\n  },\n  other: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  server: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.grey[700],\n  },\n  youChatInfo: {\n    marginRight: \"2em\",\n  },\n  otherChatInfo: {\n    marginLeft: \"1em\",\n  },\n  authorName: {\n    color: theme.palette.grey[600],\n  },\n  newUser: {\n    color: theme.palette.primary.light,\n  },\n}));\n\nexport default function ChatBubble({ author, message, username, newUser }) {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid\n        item\n        container\n        direction=\"row\"\n        justifyContent={username === author ? \"flex-end\" : \"flex-start\"}\n      >\n        {author === \"Server\" ? (\n          <Grid item>\n            <Box className={`${classes.chat} ${classes.server}`}>\n              <Typography\n                align=\"left\"\n                variant=\"subtitle1\"\n                className={classes.messageContent}\n                display=\"inline\"\n              >\n                <i className={classes.newUser}>{newUser} </i>\n                {message}\n              </Typography>\n            </Box>\n          </Grid>\n        ) : (\n          <Grid item>\n            <Box\n              className={\n                username === author\n                  ? `${classes.chat} ${classes.you}`\n                  : `${classes.chat} ${classes.other}`\n              }\n            >\n              <Typography\n                align=\"left\"\n                variant=\"subtitle1\"\n                className={classes.messageContent}\n                display=\"inline\"\n              >\n                {message}\n              </Typography>\n            </Box>\n          </Grid>\n        )}\n      </Grid>\n      <Grid\n        item\n        container\n        direction=\"row\"\n        justifyContent={username === author ? \"flex-end\" : \"flex-start\"}\n      >\n        <Typography\n          variant=\"caption\"\n          noWrap\n          className={\n            username === author\n              ? `${classes.authorName} ${classes.youChatInfo}`\n              : `${classes.authorName} ${classes.otherChatInfo}`\n          }\n        >\n          {author}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { ForumRounded } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  noMessagesText: {\n    color: theme.palette.grey[400],\n  },\n  noMessageIcon: {\n    color: theme.palette.grey[400],\n    fontSize: \"5em\",\n  },\n}));\n\nfunction NoMessages() {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" alignContent=\"center\">\n      <Grid container direction=\"row\" justifyContent=\"center\">\n        <ForumRounded className={classes.noMessageIcon} />\n      </Grid>\n      <Grid item>\n        <Typography\n          align=\"center\"\n          variant=\"body1\"\n          className={classes.noMessagesText}\n        >\n          No Messages\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NoMessages;\n","import { useEffect, useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport mainTheme from \"./ui/Theme\";\nimport { SendRounded, GroupRounded } from \"@material-ui/icons\";\nimport ChatBubble from \"./ChatBubble\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport NoMessages from \"./NoMessages\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst useStyle = makeStyles((theme) => ({\n  chatContainer: {\n    width: \"35em\",\n    backgroundColor: theme.palette.common.white,\n    boxShadow: theme.shadows[2],\n    padding: \"1em 2em\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      height: \"100%\",\n    },\n  },\n  chatContent: {\n    width: \"100%\",\n    height: \"616px\",\n  },\n  messageInputContainer: {\n    width: \"10em\",\n  },\n  messageInput: {\n    backgroundColor: \"#fff\",\n    maxWidth: \"26em\",\n    \"&:hover\": {\n      borderColor: \"red\",\n    },\n  },\n  sendButton: {\n    backgroundColor: mainTheme.palette.secondary.main,\n    transition: \"0.5s ease\",\n    marginLeft: \"10px\",\n    height: \"100%\",\n    \"&:hover\": {\n      backgroundColor: mainTheme.palette.secondary.light,\n    },\n  },\n  messages: {\n    width: \"100%\",\n    height: \"80%\",\n    borderRadius: \"5px\",\n    marginBottom: \"1em\",\n    backgroundColor: \"#fff\",\n    padding: \"1em 0.5em \",\n  },\n  autoScroll: {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    marginLeft: \"0.5em\",\n  },\n  inputContainer: {\n    width: \"26ch\",\n  },\n  userCount: {\n    fontWeight: 600,\n    marginLeft: \"0.2em\",\n    marginTop: \"1.5px\",\n    color: theme.palette.grey[600],\n  },\n}));\n\nconst MessageInput = withStyles({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: mainTheme.palette.secondary.light,\n      },\n      \"&:hover fieldset\": {\n        borderColor: mainTheme.palette.secondary.main,\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: mainTheme.palette.secondary.main,\n      },\n    },\n  },\n})(TextField);\n\nexport default function MessageContainer({ inputName, socket }) {\n  const classes = useStyle();\n\n  const [isValidate, setIsValidate] = useState(true);\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [userCount, setUserCount] = useState(0);\n\n  function handleSendValidation(e) {\n    const value = e.target.value;\n    setMessageInput(value);\n\n    if (value !== \"\") {\n      setIsValidate(false);\n    } else {\n      setIsValidate(true);\n    }\n  }\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n\n    if (messageInput !== \"\") {\n      const messageData = {\n        id: uuidv4(),\n        author: inputName,\n        message: messageInput,\n      };\n\n      await socket.emit(\"send_message\", messageData);\n      setMessages((prevState) => [...prevState, messageData]);\n      setMessageInput(\"\");\n      setIsValidate(true);\n    }\n  };\n\n  useEffect(() => {\n    let unmounted = false;\n\n    socket.on(\"recieve_message\", (data) => {\n      if (!unmounted) {\n        setMessages((prevState) => [...prevState, data]);\n      }\n    });\n\n    socket.on(\"user_counter\", (userNumber) => {\n      if (!unmounted) {\n        setUserCount(userNumber);\n      }\n    });\n\n    socket.on(\"new_user\", (newUserName) => {\n      if (!unmounted) {\n        setMessages((prevState) => [...prevState, newUserName]);\n      }\n    });\n\n    return () => {\n      unmounted = true;\n    };\n  }, [socket]);\n\n  return (\n    <>\n      {inputName === \"\" ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignContent=\"center\"\n          style={{ width: \"100%\", height: \"100vh\" }}\n        >\n          <Grid\n            item\n            container\n            direction=\"column\"\n            alignContent=\"center\"\n            className={classes.chatContainer}\n          >\n            <Grid\n              item\n              container\n              direction=\"column\"\n              className={classes.chatContent}\n              wrap=\"nowrap\"\n            >\n              <Grid\n                item\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignContent=\"center\"\n              >\n                <GroupRounded color=\"secondary\" />\n                <Typography variant=\"body1\" className={classes.userCount}>\n                  {userCount}\n                </Typography>\n              </Grid>\n\n              <Grid\n                item\n                className={classes.messages}\n                container\n                direction=\"row\"\n                alignContent=\"center\"\n              >\n                {messages.length === 0 ? (\n                  <NoMessages />\n                ) : (\n                  <ScrollToBottom className={classes.autoScroll}>\n                    {/* Messages Here */}\n                    {messages.map((data) => {\n                      return (\n                        <ChatBubble\n                          key={data.id}\n                          author={data.author}\n                          message={data.message}\n                          username={inputName}\n                          newUser={data.newUser}\n                        />\n                      );\n                    })}\n                  </ScrollToBottom>\n                )}\n              </Grid>\n              <form\n                id=\"form\"\n                action=\"\"\n                autoComplete=\"off\"\n                onSubmit={handleSendMessage}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justifyContent=\"flex-end\"\n                  style={{ width: \"100%\", height: \"56px\" }}\n                  wrap=\"nowrap\"\n                >\n                  <MessageInput\n                    variant=\"outlined\"\n                    className={classes.messageInput}\n                    color=\"secondary\"\n                    placeholder=\"Enter your message\"\n                    value={messageInput}\n                    onChange={handleSendValidation}\n                    autoFocus\n                    fullWidth\n                  />\n                  <Grid item className={classes.buttonContainer}>\n                    <Button\n                      variant=\"contained\"\n                      className={classes.sendButton}\n                      disableElevation\n                      disabled={isValidate}\n                      onClick={handleSendMessage}\n                    >\n                      <SendRounded fontSize=\"large\" />\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./components/ui/Theme\";\nimport MainContainer from \"./components/MainContainer\";\nimport MessageContainer from \"./components/MessageContainer\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport io from \"socket.io-client\";\n\nconst socket = io.connect(\"https://jsph-chat-app-server.herokuapp.com\");\n\nfunction App() {\n  const [inputName, setInputName] = useState(\"\");\n  const [validate, setValidate] = useState(true);\n  const [invalidName, setInValidName] = useState(false);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={() => (\n              <MainContainer\n                inputName={inputName}\n                setInputName={setInputName}\n                validate={validate}\n                setValidate={setValidate}\n                invalidName={invalidName}\n                setInValidName={setInValidName}\n                socket={socket}\n              />\n            )}\n          ></Route>\n          <Route\n            exact\n            path=\"/message\"\n            component={() => (\n              <MessageContainer\n                socket={socket}\n                inputName={inputName}\n                io={io}\n                username={inputName}\n              />\n            )}\n          ></Route>\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}