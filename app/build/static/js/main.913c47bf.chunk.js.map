{"version":3,"sources":["components/ui/Theme.js","components/MainContainer.jsx","components/ChatBubble.jsx","components/NoMessages.jsx","components/MessageContainer.jsx","App.js","index.js"],"names":["blue","yellow","createTheme","palette","common","white","red","primary","main","secondary","useStyles","makeStyles","theme","chatContainer","width","height","backgroundColor","boxShadow","shadows","padding","breakpoints","down","contentContainer","greeting","fontWeight","marginBottom","color","fontSize","startButton","marginTop","avatarContainer","userAvatar","MainContainer","inputName","setInputName","validate","setValidate","invalidName","setInValidName","existingName","setExistingName","existingUser","setExistingUser","socket","classes","useTheme","a","io","connect","emit","socketid","id","username","useEffect","unmounted","on","data","timeoutId","setTimeout","i","length","_","toLower","clearTimeout","Grid","container","direction","justifyContent","alignContent","style","item","className","Avatar","trim","upperCase","slice","Typography","variant","align","TextField","error","helperText","autoComplete","autoFocus","inputProps","min","textAlign","value","onChange","e","userInput","target","upperFirst","includes","fullWidth","to","textDecoration","pointerEvents","Button","disabled","onClick","chat","maxWidth","borderRadius","overflowWrap","wordBreak","messageContent","lineHeight","you","black","marginRight","other","server","grey","youChatInfo","otherChatInfo","marginLeft","authorName","newUser","light","leftUser","ChatBubble","author","message","time","Tooltip","title","placement","arrow","Box","display","noWrap","noMessagesText","noMessageIcon","NoMessages","ForumRounded","useStyle","chatContent","messageInputContainer","messageInput","borderColor","sendButton","mainTheme","transition","messages","autoScroll","overflow","inputContainer","userCount","typingContainer","position","bottom","typingAvatar","typingAnimation","MessageInput","withStyles","root","MessageContainer","useState","isValidate","setIsValidate","setMessageInput","setMessages","setUserCount","isTyping","setIsTyping","name","typing","someoneTyping","setSomeoneTyping","typerName","handleSendMessage","preventDefault","currentTime","Date","getHours","getMinutes","messageData","uuidv4","prevState","userNumber","newUserName","wrap","GroupRounded","map","Grow","in","Chip","label","type","timeout","action","onSubmit","placeholder","buttonContainer","disableElevation","SendRounded","App","ThemeProvider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.913c47bf.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core/styles\";\n\nconst blue = \"#3DB2FF\";\nconst white = \"#FFEDDA\";\nconst yellow = \"#FFB830\";\nconst red = \"#FF2442\";\n\nexport default createTheme({\n  palette: {\n    common: {\n      blue: blue,\n      white: white,\n      yellow: yellow,\n      red: red,\n    },\n    primary: {\n      main: blue,\n    },\n    secondary: {\n      main: yellow,\n    },\n  },\n});\n","import React, { useEffect } from \"react\";\nimport {\n  Grid,\n  Typography,\n  Button,\n  TextField,\n  Avatar,\n  useTheme,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nimport io from \"socket.io-client\";\n\nconst useStyles = makeStyles((theme) => ({\n  chatContainer: {\n    width: \"35em\",\n    height: \"35em\",\n    backgroundColor: theme.palette.common.white,\n    boxShadow: theme.shadows[2],\n    padding: \"0 8em\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      height: \"100%\",\n    },\n    [theme.breakpoints.down(\"415\")]: {},\n  },\n  contentContainer: {\n    [theme.breakpoints.down(\"555\")]: {\n      width: \"300px\",\n    },\n  },\n  greeting: {\n    fontWeight: \"bold\",\n    marginBottom: \"15px\",\n    color: theme.palette.secondary.main,\n    [theme.breakpoints.down(\"510\")]: {\n      fontSize: \"1.5rem\",\n    },\n    [theme.breakpoints.down(\"375\")]: {\n      fontSize: \"1rem\",\n      marginBottom: \"10px\",\n    },\n  },\n  startButton: {\n    marginTop: \"15px\",\n    backgroundColor: theme.palette.common.red,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1.1rem\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.common.red,\n    },\n  },\n  avatarContainer: {\n    width: \"100%\",\n  },\n  userAvatar: {\n    width: \"2em\",\n    height: \"2em\",\n    fontSize: \"5rem\",\n    boxShadow: theme.shadows[3],\n    marginBottom: \"20px\",\n  },\n}));\n\nexport default function MainContainer({\n  inputName,\n  setInputName,\n  validate,\n  setValidate,\n  invalidName,\n  setInValidName,\n  existingName,\n  setExistingName,\n  existingUser,\n  setExistingUser,\n  socket,\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  function handleInput(e) {\n    const userInput = e.target.value;\n    setInputName(_.upperFirst(_.trim(userInput).slice(0, 9)));\n\n    if (_.trim(userInput) !== \"\") {\n      if (\n        _.toLower(userInput) === \"server\" ||\n        _.toLower(userInput).includes(\"server\")\n      ) {\n        setInValidName(true);\n        setValidate(true);\n      } else {\n        setInValidName(false);\n        setValidate(false);\n      }\n    } else {\n      setValidate(true);\n    }\n  }\n\n  async function handleButton() {\n    io.connect(\"https://jsph-chat-app-server.herokuapp.com/message\");\n\n    await socket.emit(\"new_user\", {\n      socketid: socket.id,\n      username: inputName,\n    });\n  }\n\n  useEffect(() => {\n    let unmounted = false;\n\n    socket.on(\"existing_user\", (data) => {\n      if (!unmounted) {\n        setExistingUser(data);\n      }\n    });\n\n    return () => {\n      unmounted = true;\n    };\n  }, [socket, setExistingUser]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (inputName !== \"\") {\n        for (var i = 0; i < existingUser.length; i++) {\n          if (_.toLower(existingUser[i].username) === _.toLower(inputName)) {\n            setExistingName(true);\n            setValidate(true);\n            break;\n          } else {\n            if (!invalidName) {\n              setExistingName(false);\n              setValidate(false);\n            }\n          }\n        }\n      }\n    }, 1);\n\n    return () => clearTimeout(timeoutId);\n  }, [inputName, existingUser, setValidate, setExistingName, invalidName]);\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignContent=\"center\"\n      style={{ width: \"100vw\", height: \"100vh\" }}\n    >\n      <Grid\n        item\n        container\n        direction=\"column\"\n        alignContent=\"center\"\n        justifyContent=\"center\"\n        className={classes.chatContainer}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          className={classes.contentContainer}\n        >\n          <Grid\n            item\n            container\n            justifyContent=\"center\"\n            className={classes.avatarContainer}\n          >\n            <Avatar\n              style={{\n                backgroundColor: validate ? \"\" : theme.palette.primary.main,\n              }}\n              className={classes.userAvatar}\n            >\n              {_.trim(_.upperCase(inputName)).slice(0, 1)}\n            </Avatar>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h4\"\n              align=\"center\"\n              color=\"initial\"\n              className={classes.greeting}\n            >\n              {validate\n                ? \"Enter your name\"\n                : \"Welcome \" + inputName.slice(0, 7)}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            container\n            justifyContent=\"center\"\n            style={{ width: \"100%\" }}\n          >\n            <TextField\n              error={invalidName || existingName}\n              helperText={\n                invalidName\n                  ? \"Please choose different name\"\n                  : existingName\n                  ? \"Name already exist\"\n                  : \"\"\n              }\n              autoComplete=\"off\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              autoFocus\n              inputProps={{ min: 0, style: { textAlign: \"center\" } }}\n              style={{ width: 300 }}\n              value={inputName}\n              onChange={handleInput}\n              fullWidth\n            />\n          </Grid>\n          <Grid>\n            <Link\n              to=\"/message\"\n              style={{\n                textDecoration: \"none\",\n                pointerEvents: validate ? \"none\" : \"auto\",\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                fullWidth\n                className={classes.startButton}\n                disabled={validate}\n                onClick={handleButton}\n              >\n                Start Chatting!\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Grid, makeStyles, Typography, Box, Tooltip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  chat: {\n    width: \"auto\",\n    height: \"auto\",\n    maxWidth: \"263px\",\n    color: \"#fff\",\n    fontWeight: 500,\n    fontSize: \"1rem\",\n    borderRadius: \"50px\",\n    padding: \"10px 15px\",\n    overflowWrap: \"break-word\",\n    wordBreak: \"break-word\",\n  },\n  messageContent: {\n    lineHeight: \"1px\",\n  },\n  you: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.common.black,\n    marginRight: \"1em\",\n  },\n  other: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  server: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.grey[700],\n  },\n  youChatInfo: {\n    marginRight: \"2em\",\n  },\n  otherChatInfo: {\n    marginLeft: \"1em\",\n  },\n  authorName: {\n    color: theme.palette.grey[600],\n  },\n  newUser: {\n    color: theme.palette.primary.light,\n  },\n  leftUser: {\n    color: theme.palette.common.red,\n  },\n}));\n\nexport default function ChatBubble({\n  author,\n  message,\n  username,\n  newUser,\n  id,\n  time,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid\n        item\n        container\n        direction=\"row\"\n        justifyContent={username === author ? \"flex-end\" : \"flex-start\"}\n      >\n        {author === \"Server\" ? (\n          <Grid item>\n            <Tooltip title={time} placement=\"right\" arrow>\n              <Box className={`${classes.chat} ${classes.server}`}>\n                <Typography\n                  align=\"left\"\n                  variant=\"subtitle1\"\n                  className={classes.messageContent}\n                  display=\"inline\"\n                >\n                  <i\n                    className={\n                      id === \"left\" ? classes.leftUser : classes.newUser\n                    }\n                  >\n                    {newUser}{\" \"}\n                  </i>\n                  {message}\n                </Typography>\n              </Box>\n            </Tooltip>\n          </Grid>\n        ) : (\n          <Grid item>\n            <Tooltip\n              title={time}\n              placement={username === author ? \"left\" : \"right\"}\n              arrow\n            >\n              <Box\n                className={\n                  username === author\n                    ? `${classes.chat} ${classes.you}`\n                    : `${classes.chat} ${classes.other}`\n                }\n              >\n                <Typography\n                  align=\"left\"\n                  variant=\"subtitle1\"\n                  className={classes.messageContent}\n                  display=\"inline\"\n                >\n                  {message}\n                </Typography>\n              </Box>\n            </Tooltip>\n          </Grid>\n        )}\n      </Grid>\n      <Grid\n        item\n        container\n        direction=\"row\"\n        justifyContent={username === author ? \"flex-end\" : \"flex-start\"}\n      >\n        <Typography\n          variant=\"caption\"\n          noWrap\n          className={\n            username === author\n              ? `${classes.authorName} ${classes.youChatInfo}`\n              : `${classes.authorName} ${classes.otherChatInfo}`\n          }\n        >\n          {author === \"Server\" ? \"💠 Server\" : author}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { ForumRounded } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  noMessagesText: {\n    color: theme.palette.grey[400],\n  },\n  noMessageIcon: {\n    color: theme.palette.grey[400],\n    fontSize: \"5em\",\n  },\n}));\n\nfunction NoMessages() {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" alignContent=\"center\">\n      <Grid container direction=\"row\" justifyContent=\"center\">\n        <ForumRounded className={classes.noMessageIcon} />\n      </Grid>\n      <Grid item>\n        <Typography\n          align=\"center\"\n          variant=\"body1\"\n          className={classes.noMessagesText}\n        >\n          No Messages\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NoMessages;\n","import { useEffect, useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Grid,\n  TextField,\n  Typography,\n  Tooltip,\n  Avatar,\n  Chip,\n  Grow,\n} from \"@material-ui/core\";\nimport mainTheme from \"./ui/Theme\";\nimport { SendRounded, GroupRounded } from \"@material-ui/icons\";\nimport ChatBubble from \"./ChatBubble\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport NoMessages from \"./NoMessages\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport _ from \"lodash\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst useStyle = makeStyles((theme) => ({\n  chatContainer: {\n    width: \"35em\",\n    backgroundColor: theme.palette.common.white,\n    boxShadow: theme.shadows[2],\n    padding: \"1em 2em\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      height: \"100%\",\n    },\n  },\n  chatContent: {\n    width: \"100%\",\n    height: \"616px\",\n  },\n  messageInputContainer: {\n    width: \"10em\",\n  },\n  messageInput: {\n    backgroundColor: \"#fff\",\n    maxWidth: \"26em\",\n    \"&:hover\": {\n      borderColor: \"red\",\n    },\n  },\n  sendButton: {\n    backgroundColor: mainTheme.palette.secondary.main,\n    transition: \"0.5s ease\",\n    marginLeft: \"10px\",\n    height: \"100%\",\n    \"&:hover\": {\n      backgroundColor: mainTheme.palette.secondary.light,\n    },\n  },\n  messages: {\n    width: \"100%\",\n    height: \"80%\",\n    borderRadius: \"5px\",\n    marginBottom: \"1em\",\n    backgroundColor: \"#fff\",\n    padding: \"1em 0.5em \",\n  },\n  autoScroll: {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    marginLeft: \"0.5em\",\n  },\n  inputContainer: {\n    width: \"26ch\",\n  },\n  userCount: {\n    fontWeight: 600,\n    marginLeft: \"0.2em\",\n    marginTop: \"1.5px\",\n    color: theme.palette.grey[600],\n  },\n  typingContainer: {\n    position: \"absolute\",\n    bottom: \"0.5em\",\n  },\n  typingAvatar: {\n    width: \"30px\",\n    height: \"30px\",\n    backgroundColor: theme.palette.primary.light,\n    boxShadow: theme.shadows[3],\n  },\n  typingAnimation: {\n    marginLeft: \"0.5em\",\n    boxShadow: theme.shadows[3],\n  },\n}));\n\nconst MessageInput = withStyles({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: mainTheme.palette.secondary.light,\n      },\n      \"&:hover fieldset\": {\n        borderColor: mainTheme.palette.secondary.main,\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: mainTheme.palette.secondary.main,\n      },\n    },\n  },\n})(TextField);\n\nexport default function MessageContainer({ inputName, socket }) {\n  const classes = useStyle();\n\n  const [isValidate, setIsValidate] = useState(true);\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [userCount, setUserCount] = useState(0);\n  const [isTyping, setIsTyping] = useState(false);\n\n  const [someoneTyping, setSomeoneTyping] = useState({\n    name: \"\",\n    typing: false,\n  });\n\n  const typerName = someoneTyping.name;\n  const typing = someoneTyping.typing;\n\n  async function handleSendValidation(e) {\n    const value = e.target.value;\n    setMessageInput(value);\n    setIsTyping(true);\n\n    if (isTyping) {\n      await socket.emit(\"someone_typing\", { name: inputName, typing: true });\n    }\n\n    if (!isTyping) {\n    }\n\n    if (_.trim(value) !== \"\") {\n      setIsValidate(false);\n    } else {\n      setIsValidate(true);\n    }\n  }\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n\n    const currentTime = new Date().getHours() + \":\" + new Date().getMinutes();\n\n    if (_.trim(messageInput) !== \"\") {\n      const messageData = {\n        id: uuidv4(),\n        author: inputName,\n        message: messageInput,\n        time: currentTime,\n      };\n\n      await socket.emit(\"someone_typing\", { name: \"\", typing: false });\n      await socket.emit(\"send_message\", messageData);\n      setMessages((prevState) => [...prevState, messageData]);\n      setMessageInput(\"\");\n      setIsValidate(true);\n    }\n  };\n\n  useEffect(() => {\n    let unmounted = false;\n\n    socket.on(\"recieve_message\", (data) => {\n      if (!unmounted) {\n        setMessages((prevState) => [...prevState, data]);\n      }\n    });\n\n    socket.on(\"user_counter\", (userNumber) => {\n      if (!unmounted) {\n        setUserCount(userNumber);\n      }\n    });\n\n    socket.on(\"new_user\", (newUserName) => {\n      if (!unmounted) {\n        setMessages((prevState) => [...prevState, newUserName]);\n      }\n    });\n\n    socket.on(\"someone_typing\", (data) => {\n      if (!unmounted) {\n        setSomeoneTyping(data);\n      }\n    });\n\n    return () => {\n      unmounted = true;\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsTyping(false);\n      socket.emit(\"someone_typing\", { name: \"\", typing: false });\n    }, 1000);\n\n    return () => clearTimeout(timeoutId);\n  }, [messageInput, socket]);\n\n  return (\n    <>\n      {inputName === \"\" ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignContent=\"center\"\n          style={{ width: \"100%\", height: \"100vh\" }}\n        >\n          <Grid\n            item\n            container\n            direction=\"column\"\n            alignContent=\"center\"\n            className={classes.chatContainer}\n          >\n            <Grid\n              item\n              container\n              direction=\"column\"\n              className={classes.chatContent}\n              wrap=\"nowrap\"\n            >\n              <Tooltip title=\"online\" placement=\"bottom\" arrow>\n                <Grid\n                  item\n                  container\n                  direction=\"row\"\n                  justifyContent=\"center\"\n                  alignContent=\"center\"\n                >\n                  <GroupRounded color=\"secondary\" />\n                  <Typography variant=\"body1\" className={classes.userCount}>\n                    {userCount}\n                  </Typography>\n                </Grid>\n              </Tooltip>\n\n              <Grid\n                item\n                className={classes.messages}\n                container\n                direction=\"row\"\n                alignContent=\"center\"\n                style={{ position: \"relative\" }}\n              >\n                {messages.length === 0 ? (\n                  <NoMessages />\n                ) : (\n                  <ScrollToBottom className={classes.autoScroll}>\n                    {/* Messages Here */}\n                    {messages.map((data) => {\n                      return (\n                        <ChatBubble\n                          key={data.id}\n                          author={data.author}\n                          message={data.message}\n                          username={inputName}\n                          newUser={data.newUser}\n                          id={data.id}\n                          time={data.time}\n                        />\n                      );\n                    })}\n                  </ScrollToBottom>\n                )}\n\n                {/* Typing content */}\n                {typing && (\n                  <Grow in={typing}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      className={classes.typingContainer}\n                    >\n                      <Grid item>\n                        <Avatar className={classes.typingAvatar}>\n                          {typerName.slice(0, 1)}\n                        </Avatar>\n                      </Grid>\n                      <Chip\n                        label={\n                          <Loader\n                            type=\"ThreeDots\"\n                            color=\"#00BFFF\"\n                            height={30}\n                            width={30}\n                            timeout={0}\n                          />\n                        }\n                        className={classes.typingAnimation}\n                      ></Chip>\n                    </Grid>\n                  </Grow>\n                )}\n              </Grid>\n              <form\n                id=\"form\"\n                action=\"\"\n                autoComplete=\"off\"\n                onSubmit={handleSendMessage}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justifyContent=\"flex-end\"\n                  style={{ width: \"100%\", height: \"56px\" }}\n                  wrap=\"nowrap\"\n                >\n                  <MessageInput\n                    variant=\"outlined\"\n                    className={classes.messageInput}\n                    color=\"secondary\"\n                    placeholder=\"Enter your message\"\n                    value={messageInput}\n                    onChange={handleSendValidation}\n                    autoFocus\n                    fullWidth\n                  />\n                  <Tooltip title=\"send\" placement=\"top\" arrow>\n                    <Grid item className={classes.buttonContainer}>\n                      <Button\n                        variant=\"contained\"\n                        className={classes.sendButton}\n                        disableElevation\n                        disabled={isValidate}\n                        onClick={handleSendMessage}\n                      >\n                        <SendRounded fontSize=\"large\" />\n                      </Button>\n                    </Grid>\n                  </Tooltip>\n                </Grid>\n              </form>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./components/ui/Theme\";\nimport MainContainer from \"./components/MainContainer\";\nimport MessageContainer from \"./components/MessageContainer\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport io from \"socket.io-client\";\n\nconst socket = io.connect(\"https://jsph-chat-app-server.herokuapp.com\");\n\nfunction App() {\n  const [inputName, setInputName] = useState(\"\");\n  const [validate, setValidate] = useState(true);\n  const [invalidName, setInValidName] = useState(false);\n  const [existingName, setExistingName] = useState(false);\n  const [existingUser, setExistingUser] = useState([]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={() => (\n              <MainContainer\n                inputName={inputName}\n                setInputName={setInputName}\n                validate={validate}\n                setValidate={setValidate}\n                invalidName={invalidName}\n                setInValidName={setInValidName}\n                existingName={existingName}\n                existingUser={existingUser}\n                setExistingUser={setExistingUser}\n                setExistingName={setExistingName}\n                socket={socket}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/message\"\n            component={() => (\n              <MessageContainer\n                socket={socket}\n                inputName={inputName}\n                io={io}\n                username={inputName}\n              />\n            )}\n          />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}